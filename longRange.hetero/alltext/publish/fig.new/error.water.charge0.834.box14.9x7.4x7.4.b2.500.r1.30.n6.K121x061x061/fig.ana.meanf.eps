%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig.ana.meanf.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Thu Mar 15 14:30:58 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 290 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fig.ana.meanf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (wanghan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 15 14:30:58 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 290 50 lineto 290 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1168 512 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 512 M
[ [(Helvetica) 160.0 0.0 true true 0 (-1.5e-05)]
] -53.3 MRshow
1.000 UL
LTb
1168 1051 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 1051 M
[ [(Helvetica) 160.0 0.0 true true 0 (-1.0e-05)]
] -53.3 MRshow
1.000 UL
LTb
1168 1590 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 1590 M
[ [(Helvetica) 160.0 0.0 true true 0 (-5.0e-06)]
] -53.3 MRshow
1.000 UL
LTb
1168 2129 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 2129 M
[ [(Helvetica) 160.0 0.0 true true 0 (0.0e+00)]
] -53.3 MRshow
1.000 UL
LTb
1168 2668 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 2668 M
[ [(Helvetica) 160.0 0.0 true true 0 (5.0e-06)]
] -53.3 MRshow
1.000 UL
LTb
1168 3207 M
63 0 V
3298 0 R
-63 0 V
stroke
1072 3207 M
[ [(Helvetica) 160.0 0.0 true true 0 (1.0e-05)]
] -53.3 MRshow
1.000 UL
LTb
1168 512 M
0 63 V
0 2632 R
0 -63 V
stroke
1168 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1588 512 M
0 63 V
0 2632 R
0 -63 V
stroke
1588 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MCshow
1.000 UL
LTb
2008 512 M
0 63 V
0 2632 R
0 -63 V
stroke
2008 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 4)]
] -53.3 MCshow
1.000 UL
LTb
2428 512 M
0 63 V
0 2632 R
0 -63 V
stroke
2428 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 6)]
] -53.3 MCshow
1.000 UL
LTb
2849 512 M
0 63 V
0 2632 R
0 -63 V
stroke
2849 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 8)]
] -53.3 MCshow
1.000 UL
LTb
3269 512 M
0 63 V
0 2632 R
0 -63 V
stroke
3269 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
3689 512 M
0 63 V
0 2632 R
0 -63 V
stroke
3689 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 12)]
] -53.3 MCshow
1.000 UL
LTb
4109 512 M
0 63 V
0 2632 R
0 -63 V
stroke
4109 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MCshow
1.000 UL
LTb
4529 512 M
0 63 V
0 2632 R
0 -63 V
stroke
4529 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1168 3207 N
0 -2695 V
3361 0 V
0 2695 V
-3361 0 V
Z stroke
LCb setrgbcolor
128 1859 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Mean error force)]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
2848 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (x)]
] -53.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
3.000 UL
LT1
LC0 setrgbcolor
LCb setrgbcolor
3794 1455 M
[ [(Helvetica) 160.0 0.0 true true 0 (real <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -37.3 MRshow
LT1
LC0 setrgbcolor
1221 2129 CircleF
1326 2129 CircleF
1431 2129 CircleF
1536 2129 CircleF
1641 2129 CircleF
1746 2129 CircleF
1851 1584 CircleF
1956 1895 CircleF
2061 2098 CircleF
2166 2116 CircleF
2271 2350 CircleF
2376 2285 CircleF
2481 1970 CircleF
2586 2082 CircleF
2691 2018 CircleF
2796 2438 CircleF
2901 1957 CircleF
3006 2178 CircleF
3111 2284 CircleF
3216 2105 CircleF
3321 2057 CircleF
3426 2192 CircleF
3531 2306 CircleF
3636 2875 CircleF
3741 2129 CircleF
3846 2129 CircleF
3951 2129 CircleF
4056 2129 CircleF
4161 2129 CircleF
4266 2129 CircleF
4113 1455 CircleF
% End plot #1
% Begin plot #2
1.000 UP
3.000 UL
LT2
LC1 setrgbcolor
LCb setrgbcolor
3794 1295 M
[ [(Helvetica) 160.0 0.0 true true 0 (real <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 128.0 80.0 true true 0 (dir)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -53.3 MRshow
LT2
LC1 setrgbcolor
1221 2129 CircleF
1326 2129 CircleF
1431 2129 CircleF
1536 2129 CircleF
1641 2129 CircleF
1746 2129 CircleF
1851 2750 CircleF
1956 1875 CircleF
2061 1999 CircleF
2166 2237 CircleF
2271 2331 CircleF
2376 2284 CircleF
2481 1991 CircleF
2586 1983 CircleF
2691 2150 CircleF
2796 2401 CircleF
2901 1994 CircleF
3006 2162 CircleF
3111 2287 CircleF
3216 2117 CircleF
3321 2082 CircleF
3426 2132 CircleF
3531 2447 CircleF
3636 1845 CircleF
3741 2129 CircleF
3846 2129 CircleF
3951 2129 CircleF
4056 2129 CircleF
4161 2129 CircleF
4266 2129 CircleF
4113 1295 CircleF
% End plot #2
% Begin plot #3
1.000 UP
3.000 UL
LT3
LC2 setrgbcolor
LCb setrgbcolor
3794 1135 M
[ [(Helvetica) 160.0 0.0 true true 0 (real <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 128.0 80.0 true true 0 (rec)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -53.3 MRshow
LT3
LC2 setrgbcolor
1221 2129 CircleF
1326 2129 CircleF
1431 2129 CircleF
1536 2129 CircleF
1641 2129 CircleF
1746 2129 CircleF
1851 963 CircleF
1956 2150 CircleF
2061 2228 CircleF
2166 2008 CircleF
2271 2148 CircleF
2376 2130 CircleF
2481 2108 CircleF
2586 2228 CircleF
2691 1997 CircleF
2796 2166 CircleF
2901 2091 CircleF
3006 2145 CircleF
3111 2126 CircleF
3216 2117 CircleF
3321 2104 CircleF
3426 2189 CircleF
3531 1988 CircleF
3636 3159 CircleF
3741 2129 CircleF
3846 2129 CircleF
3951 2129 CircleF
4056 2129 CircleF
4161 2129 CircleF
4266 2129 CircleF
4113 1135 CircleF
% End plot #3
% Begin plot #4
3.000 UL
LT1
LC0 setrgbcolor
LCb setrgbcolor
3794 975 M
[ [(Helvetica) 160.0 0.0 true true 0 (estimate <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -37.3 MRshow
LT1
LC0 setrgbcolor
3890 975 M
447 0 V
1280 2133 M
223 23 V
224 -74 V
223 -692 V
224 1250 V
223 -324 V
224 -221 V
223 31 V
224 21 V
223 112 V
224 -3 V
223 -153 V
224 8 V
223 17 V
% End plot #4
% Begin plot #5
stroke
LT2
LC1 setrgbcolor
LCb setrgbcolor
3794 815 M
[ [(Helvetica) 160.0 0.0 true true 0 (estimate <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 128.0 80.0 true true 0 (dir)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -53.3 MRshow
LT2
LC1 setrgbcolor
3890 815 M
447 0 V
1280 2133 M
223 23 V
224 -75 V
223 -347 V
224 659 V
223 -154 V
224 -194 V
223 104 V
224 -89 V
223 145 V
224 70 V
223 -207 V
224 42 V
223 18 V
% End plot #5
% Begin plot #6
stroke
LT3
LC2 setrgbcolor
LCb setrgbcolor
3794 655 M
[ [(Helvetica) 160.0 0.0 true true 0 (estimate <)]
[(Symbol) 160.0 0.0 true true 0 (D)]
[(Helvetica) 160.0 0.0 true true 0 (F)]
[(Helvetica) 128.0 -48.0 true true 0 (x)]
[(Helvetica) 128.0 80.0 true true 0 (rec)]
[(Helvetica) 160.0 0.0 true true 0 (>)]
] -53.3 MRshow
LT3
LC2 setrgbcolor
3890 655 M
447 0 V
1280 2129 M
223 0 V
224 1 V
223 -345 V
224 591 V
223 -170 V
224 -28 V
223 -72 V
224 111 V
223 -34 V
224 -73 V
223 54 V
224 -35 V
223 0 V
% End plot #6
stroke
1.000 UL
LTb
1168 3207 N
0 -2695 V
3361 0 V
0 2695 V
-3361 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
